// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using test3.DataSource;
using test3.Interface;
using test3.Models;
using UIKit;

namespace test3
{
	public partial class EditBookViewController : UIViewController
	{
		public int Id { get; set; }
		IBooks myBooks;
		BookModel currentBook { get; set; }
		public BooksTableViewController Delegate { get; set; }

		public EditBookViewController (IntPtr handle) : base (handle)
		{

			myBooks = new BookLocalDatabase();
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

			saveButton.Enabled = false;
			editButton.Enabled = false;

			NameText.ShouldReturn = (textField) =>
			{
				textField.ResignFirstResponder();
				return true;
			};

			AuthorText.ShouldReturn = (textField) =>
			{
				textField.ResignFirstResponder();
				return true;
			};

			NameText.EditingChanged += (sender, args) =>
			{
				saveButton.Enabled = true;
				editButton.Enabled = true;
			};

			AuthorText.EditingChanged += (sender, args) =>
			{
				saveButton.Enabled = true;
				editButton.Enabled = true;
			};

			//Edit Book
			editButton.TouchUpInside += (sender, e) => {
				EditBook();
			};
			saveButton.Clicked += (sender, e) => {
				EditBook();
			};
			//Delete Book
			deleteButton.TouchUpInside += (sender, e) => {
				DeleteBook();
			};
		}


		public override void TouchesBegan(NSSet touches, UIEvent evt)
		{
			base.TouchesBegan(touches, evt);
			this.View.EndEditing(true);
		}

		public override void ViewWillAppear(bool animated)
        {
            base.ViewWillAppear(animated);

			NameText.Text = currentBook.Name;
			AuthorText.Text = currentBook.Author;
			Id = currentBook.Id;
        }

		public void SetTask(BooksTableViewController d, BookModel b)
        {
			Delegate = d;
			currentBook = b;
        }


		private void Alert(string title, string msg, Action<UIAlertAction> action)
		{
            var alertController = UIAlertController.Create(title, msg, UIAlertControllerStyle.Alert);
			alertController.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Destructive,action));
			alertController.AddAction(UIAlertAction.Create("Cancel", UIAlertActionStyle.Cancel, null));

			PresentViewController(alertController, true, null);
		}

		void DeleteBook()
        {
			Alert("Be Carefull!", "Do you want to delete this book?",(acion)=> {
				BookModel b = new BookModel();
				b.Name = currentBook.Name;
				b.Author = currentBook.Author;
				b.Id = currentBook.Id;
				myBooks.DeleteBook(b);

                NavigationController.PopToRootViewController(true);
			});
			
        }

		void EditBook()
        {
			BookModel b = new BookModel();
			b.Name = NameText.Text;
			b.Author = AuthorText.Text;
			b.Id = currentBook.Id;
			myBooks.UpdateBook(b);

			NavigationController.PopToRootViewController(true);
		}

    }
}
